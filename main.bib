@article{Thongtanunam,
annote = {Colocar esse artigo na refer{\^{e}}ncia},
author = {Thongtanunam, Patanamon and Mcintosh, Shane and Hassan, Ahmed E and Iida, Hajimu},
file = {:home/tiago/Documents/Projeto Wiese/Ownership e Authorship/ICSE2016{\_}RevisitingCodeOwnershipAndItsRelationshipWithSoftwareQualityInTheScopeOfModernCode Review.pdf:pdf},
isbn = {9781450339001},
keywords = {expertise,ownership,software quality},
number = {1},
title = {{Revisiting Code Ownership and its Relationship with Software Quality in the Scope of Modern Code Review}}
}

@article{Rahman2011,
annote = {- Escolher uma pessoas com uma experiecnai espec{\'{i}}fica para aquela {\'{a}}rea do sistema.
- Track down desenvolvedores assim {\'{e}} poss{\'{i}}vel saber quem escreveu determinada linha de c{\'{o}}digo.
- Aumentar o numero de autores alterando um mesmo arquivo pode levar ao aumento de defeitos
- Estudar a rela{\c{c}}{\~{a}}o entre a experi{\^{e}}ncia do desenvolvedor e a qualidade do fragmento de sua contribui{\c{c}}{\~{a}}o
- Para cada linha do c{\'{o}}digo, {\'{e}} identificado o autor daquela linha
- Numero de linhas contribuidas pelo autor x -{\textgreater}authorship

- O que {\'{e}} hunks?},
author = {Rahman, Foyzur and Devanbu, Premkumar},
file = {:home/tiago/Documents/Projeto Wiese/Ownership e Authorship/icse2011--.pdf:pdf},
isbn = {9781450304450},
keywords = {all or part of,collaboration,experience,or hard copies of,ownership,permission to make digital,software quality,this work for},
title = {{Ownership , Experience and Defects :}},
year = {2011}
}

@article{Greiler,
author = {Greiler, Michaela and Herzig, Kim},
file = {:home/tiago/Documents/Projeto Wiese/Ownership e Authorship/msr2015-ownership.pdf:pdf},
title = {{Code Ownership and Software Quality : A Replication Study}},
year="2015"
}

@Article{Canfora2014,
author="Canfora, Gerardo
and Cerulo, Luigi
and Cimitile, Marta
and Di Penta, Massimiliano",
title="How changes affect software entropy: an empirical study",
journal="Empirical Software Engineering",
year="2014",
volume="19",
number="1",
pages="1--38",
abstract="Context Software systems continuously change for various reasons, such as adding new features, fixing bugs, or refactoring. Changes may either increase the source code complexity and disorganization, or help to reducing it. Aim This paper empirically investigates the relationship of source code complexity and disorganization---measured using source code change entropy---with four factors, namely the presence of refactoring activities, the number of developers working on a source code file, the participation of classes in design patterns, and the different kinds of changes occurring on the system, classified in terms of their topics extracted from commit notes. Method We carried out an exploratory study on an interval of the life-time span of four open source systems, namely ArgoUML, Eclipse-JDT, Mozilla, and Samba, with the aim of analyzing the relationship between the source code change entropy and four factors: refactoring activities, number of contributors for a file, participation of classes in design patterns, and change topics. Results The study shows that (i) the change entropy decreases after refactoring, (ii) files changed by a higher number of developers tend to exhibit a higher change entropy than others, (iii) classes participating in certain design patterns exhibit a higher change entropy than others, and (iv) changes related to different topics exhibit different change entropy, for example bug fixings exhibit a limited change entropy while changes introducing new features exhibit a high change entropy. Conclusions Results provided in this paper indicate that the nature of changes (in particular changes related to refactorings), the software design, and the number of active developers are factors related to change entropy. Our findings contribute to understand the software aging phenomenon and are preliminary to identifying better ways to contrast it.",
issn="1573-7616",
doi="10.1007/s10664-012-9214-z",
url="http://dx.doi.org/10.1007/s10664-012-9214-z"
}

@inproceedings{Hassan:2009:PFU:1555001.1555024,
 author = {Hassan, Ahmed E.},
 title = {Predicting Faults Using the Complexity of Code Changes},
 booktitle = {Proceedings of the 31st International Conference on Software Engineering},
 series = {ICSE '09},
 year = {2009},
 isbn = {978-1-4244-3453-4},
 pages = {78--88},
 numpages = {11},
 url = {http://dx.doi.org/10.1109/ICSE.2009.5070510},
 doi = {10.1109/ICSE.2009.5070510},
 acmid = {1555024},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
} 

@article{10.2307/2634607,
 ISSN = {00251909, 15265501},
 URL = {http://www.jstor.org/stable/2634607},
 abstract = {Software maintenance claims a large proportion of organizational resources. It is thought that many maintenance problems derive from inadequate software design and development practices. Poor design choices can result in complex software that is costly to support and difficult to change. However, it is difficult to assess the actual maintenance performance effects of software development practices because their impact is realized over the software life cycle. To estimate the impact of development activities in a more practical time frame, this research develops a two-stage model in which software complexity is a key intermediate variable that links design and development decisions to their downstream effects on software maintenance. The research analyzes data collected from a national mass merchandising retailer on 29 software enhancement projects and 23 software applications in a large IBM COBOL environment. Results indicate that the use of a code generator in development is associated with increased software complexity and software enhancement project effort. The use of packaged software is associated with decreased software complexity and software enhancement effort. These results suggest an important link between software development practices and maintenance performance.},
 author = {Rajiv D. Banker, Gordon B. Davis, Sandra A. Slaughter},
 journal = {Management Science},
 number = {4},
 pages = {433-450},
 publisher = {INFORMS},
 title = {Software Development Practices, Software Complexity, and Software Maintenance Performance: A Field Study},
 volume = {44},
 year = {1998}
}

@article{Shannon:2001:MTC:584091.584093,
 author = {Shannon, C. E.},
 title = {A Mathematical Theory of Communication},
 journal = {SIGMOBILE Mob. Comput. Commun. Rev.},
 issue_date = {January 2001},
 volume = {5},
 number = {1},
 month = jan,
 year = {2001},
 issn = {1559-1662},
 pages = {3--55},
 numpages = {53},
 url = {http://doi.acm.org/10.1145/584091.584093},
 doi = {10.1145/584091.584093},
 acmid = {584093},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@inproceedings{Munson:1998:CCM:850947.853326,
 author = {Munson, J. C. and Elbaum, S. G.},
 title = {Code Churn: A Measure for Estimating the Impact of Code Change},
 booktitle = {Proceedings of the International Conference on Software Maintenance},
 series = {ICSM '98},
 year = {1998},
 isbn = {0-8186-8779-7},
 pages = {24--},
 url = {http://dl.acm.org/citation.cfm?id=850947.853326},
 acmid = {853326},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
} 

@article{Foucault2015,
author = {Foucault, Matthieu and Teyton, C{\'{e}}dric and Lo, David and Blanc, Xavier and Falleri, Jean-r{\'{e}}my},
doi = {10.1016/j.infsof.2015.01.013},
file = {:home/tiago/Documents/Projeto Wiese/Ownership e Authorship/ist-ownership.pdf:pdf},
issn = {0950-5849},
journal = {Information and Software Technology},
keywords = {software engineering},
pages = {102--112},
publisher = {Elsevier B.V.},
title = {{On the usefulness of ownership metrics in open-source software projects}},
url = {http://dx.doi.org/10.1016/j.infsof.2015.01.013},
volume = {64},
year = {2015}
}

@book{koscianski2007qualidade,
  title={Qualidade de Software - 2{\textordfeminine} Edi{\c{c}}{\~a}o: Aprenda as metodologias e t{\'e}cnicas mais modernas para o desenvolvimento de software},
  author={Koscianski, A. and dos Santos Soares, M.},
  isbn={9788575221129},
  url={https://books.google.com.br/books?id=O9aWoUq6L88C},
  year={2007},
  publisher={Novatec}
}